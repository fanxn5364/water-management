-- ตาราง Zones
CREATE TABLE Zones (
    zone_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,    -- รหัสโซน (PK)
    zone_name VARCHAR2(50 CHAR) NOT NULL,   -- ชื่อโซน
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- วันที่สร้างข้อมูล
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  -- วันที่แก้ไขข้อมูล
);

-- ตาราง Users
CREATE TABLE Users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,    -- รหัสผู้ใช้งาน (PK)
    full_name VARCHAR2(255 CHAR) NOT NULL,  -- ชื่อ-นามสกุล
    house_number VARCHAR2(10 CHAR) NOT NULL,    -- บ้านเลขที่
    id_card_number VARCHAR2(13 CHAR) UNIQUE NOT NULL CHECK (LENGTH(id_card_number) = 13),   -- เลขบัตรประชาชน 13 หลัก
    password VARCHAR2(255 CHAR) NOT NULL,   -- รหัสผ่าน
    phone_number VARCHAR2(15 CHAR) CHECK (REGEXP_LIKE(phone_number, '^[0-9]+$')),   -- เบอร์โทรศัพท์ (ตัวเลขเท่านั้น)
    zone_id NUMBER NOT NULL,   -- รหัสโซน (FK)
    role VARCHAR2(50 CHAR) DEFAULT 'user' NOT NULL,  -- บทบาทของผู้ใช้งาน (user, admin)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- วันที่สร้างข้อมูล
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- วันที่แก้ไขข้อมูล
    CONSTRAINT fk_user_zone FOREIGN KEY (zone_id) REFERENCES Zones(zone_id) ON DELETE CASCADE   -- ความสัมพันธ์กับตาราง Zones (FK)
);

-- ตาราง WaterUsage
CREATE TABLE WaterUsage (
    usage_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,   -- รหัสการใช้น้ำ (PK)
    zone_id NUMBER NOT NULL,    -- รหัสโซน (FK)
    unit_price NUMBER(10, 2) NOT NULL CHECK (unit_price > 0),   -- ราคาต่อหน่วย (บาท)
    service_fee NUMBER(10, 2) NOT NULL CHECK (service_fee >= 0),    -- ค่าบริการ (บาท)
    status VARCHAR2(50 CHAR) DEFAULT 'unpaid' NOT NULL, -- สถานะการชำระเงิน (unpaid, paid)
    notes CLOB, -- หมายเหตุ
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- วันที่สร้างข้อมูล
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- วันที่แก้ไขข้อมูล
    CONSTRAINT fk_zone_waterusage FOREIGN KEY (zone_id) REFERENCES Zones(zone_id) ON DELETE CASCADE -- ความสัมพันธ์กับตาราง Zones (FK)
);

-- ตาราง WaterUsageDetails
CREATE TABLE WaterUsageDetails (
    detail_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  -- รหัสรายละเอียดการใช้น้ำ (PK)
    usage_id NUMBER NOT NULL,   -- รหัสการใช้น้ำ (FK)
    reading_date DATE NOT NULL, -- วันที่บันทึกค่ามิเตอร์
    previous_reading NUMBER NOT NULL CHECK (previous_reading >= 0), -- ค่ามิเตอร์ก่อนหน้า (หน่วย)
    current_reading NUMBER NOT NULL CHECK (current_reading >= 0),   -- ค่ามิเตอร์ปัจจุบัน (หน่วย)
    total_units NUMBER NOT NULL,    -- จำนวนหน่วยน้ำที่ใช้งาน (หน่วย)
    total_payment NUMBER(10, 2) NOT NULL,   -- จำนวนเงินที่ต้องชำระ (บาท)
    outstanding_balance NUMBER(10, 2) DEFAULT 0 CHECK (outstanding_balance >= 0),   -- ยอดค้างชำระ (บาท)
    penalty_fee NUMBER(10, 2) DEFAULT 0 CHECK (penalty_fee >= 0),   -- ค่าปรับ (บาท)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- วันที่สร้างข้อมูล
    CONSTRAINT fk_usage_details FOREIGN KEY (usage_id) REFERENCES WaterUsage(usage_id) ON DELETE CASCADE    -- ความสัมพันธ์กับตาราง WaterUsage (FK)
);

-- ตาราง WaterUsageChanges
CREATE TABLE WaterUsageChanges (
    change_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  -- รหัสการเปลี่ยนแปลงการใช้น้ำ (PK)
    detail_id NUMBER NOT NULL,  -- รหัสรายละเอียดการใช้น้ำ (FK)
    change_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,    -- วันที่เปลี่ยนแปลง
    previous_reading NUMBER NOT NULL CHECK (previous_reading >= 0), -- ค่ามิเตอร์ก่อนหน้า (หน่วย)
    current_reading NUMBER NOT NULL CHECK (current_reading >= 0),   -- ค่ามิเตอร์ปัจจุบัน (หน่วย)
    total_units NUMBER NOT NULL,    -- จำนวนหน่วยน้ำที่ใช้งาน (หน่วย)
    total_payment NUMBER(10, 2) NOT NULL,   -- จำนวนเงินที่ต้องชำระ (บาท)
    outstanding_balance NUMBER(10, 2) DEFAULT 0 CHECK (outstanding_balance >= 0),   -- ยอดค้างชำระ (บาท)
    notes CLOB, -- หมายเหตุ
    CONSTRAINT fk_detail_changes FOREIGN KEY (detail_id) REFERENCES WaterUsageDetails(detail_id) ON DELETE CASCADE  -- ความสัมพันธ์กับตาราง WaterUsageDetails (FK)
);

-- ตาราง Admins
CREATE TABLE Admins (
    admin_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,   -- รหัสผู้ดูแลระบบ (PK)
    username VARCHAR2(50 CHAR) UNIQUE NOT NULL,  -- ชื่อผู้ใช้งาน
    password VARCHAR2(255 CHAR) NOT NULL,   -- รหัสผ่าน
    full_name VARCHAR2(255 CHAR),   -- ชื่อ-นามสกุล
    role VARCHAR2(50 CHAR) DEFAULT 'admin' CHECK (role IN ('admin', 'superadmin')), -- บทบาทของผู้ดูแลระบบ (admin, superadmin)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- วันที่สร้างข้อมูล
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  -- วันที่แก้ไขข้อมูล
);

-- ตาราง UserLogs
CREATE TABLE UserLogs (
    log_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,   -- รหัสบันทึกข้อมูลผู้ใช้งาน (PK)
    userLog_id NUMBER NOT NULL, -- รหัสผู้ใช้งาน (FK) ทั้ง Users และ Admins
    action VARCHAR2(255 CHAR),  -- การกระทำ
    action_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP    -- เวลาที่กระทำ
);


-- สร้าง Trigger สำหรับการคำนวณค่าใช้จ่ายน้ำ
CREATE OR REPLACE TRIGGER trg_calculate_water_usage
BEFORE INSERT OR UPDATE ON WaterUsageDetails  -- ควรใช้บน WaterUsageDetails ไม่ใช่ WaterUsage
FOR EACH ROW
BEGIN
    -- ตรวจสอบว่า current_reading มากกว่า previous_reading เพื่อป้องกันค่าผิดพลาด
    IF :NEW.current_reading < :NEW.previous_reading THEN
        RAISE_APPLICATION_ERROR(-20001, 'current_reading must be greater than or equal to previous_reading');
    END IF;

    -- คำนวณ total_units โดยหักค่าการใช้น้ำก่อนหน้าออกจากค่าการใช้น้ำปัจจุบัน
    :NEW.total_units := :NEW.current_reading - :NEW.previous_reading;

    -- คำนวณค่าใช้จ่ายรวมทั้งหมด
    :NEW.total_payment := (:NEW.total_units * :NEW.unit_price)
                          + :NEW.service_fee
                          + :NEW.penalty_fee;

    -- หาก outstanding_balance ยังไม่ได้ชำระให้เพิ่มค่าใช้จ่ายใหม่ไปในยอดรวม
    IF :NEW.outstanding_balance > 0 THEN
        :NEW.total_payment := :NEW.total_payment + :NEW.outstanding_balance;
    END IF;

    -- อัปเดตสถานะการชำระเงินเป็น "unpaid" ถ้ายังไม่มียอดชำระทั้งหมด
    IF :NEW.total_payment > 0 THEN
        :NEW.status := 'unpaid';
    ELSE
        :NEW.status := 'paid';
    END IF;

    -- บันทึกค่าปรับปรุงล่าสุดสำหรับ updated_at
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/




-- Trigger สำหรับการอัปเดตข้อมูล updated_at ของตาราง Users
CREATE OR REPLACE TRIGGER trg_update_users
BEFORE UPDATE ON Users
FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;

-- Trigger สำหรับการอัปเดตข้อมูล updated_at ของตาราง Zones
CREATE OR REPLACE TRIGGER trg_update_zone
BEFORE UPDATE ON Zones
FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;

-- Trigger สำหรับการอัปเดตข้อมูล updated_at ของตาราง WaterUsage
CREATE OR REPLACE TRIGGER trg_update_waterusage
BEFORE UPDATE ON WaterUsage
FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;

-- Trigger สำหรับการอัปเดตข้อมูล updated_at ของตาราง Admins
CREATE OR REPLACE TRIGGER trg_update_admins
BEFORE UPDATE ON Admins
FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;

